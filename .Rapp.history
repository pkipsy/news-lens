Zipf_rank <- c('1','2','3','4','5','6','7')#
frequency <- c(25326, 31063, 13426, 3698, 637, 123, 13)#
Zipf.data <- data.frame(Zipf_rank, frequency)
Zipf.data
plot(Zipf.data)
hist(mtcars$mpg)
Zipf.data$Zipf_rank
library(sm)#
sm.density.compare(frequency, Zipf_Rank, xlab="Zipf Scale") title(main="Number of Word Types by Zipf Value")
sm.density.compare(frequency, Zipf_Rank, xlab="Zipf Scale") title(main="Number of Word Types by Zipf Value"))
sm.density.compare(frequency, Zipf_Rank, xlab="Zipf Scale"), title(main="Number of Word Types by Zipf Value"))
sm.density.compare(frequency, Zipf_Rank, xlab="Zipf Scale")
sm.density.compare(frequency, Zipf_rank, xlab="Zipf Scale")
Zipf.data$frequency
sm.density.compare(Zipf.data$frequency, Zipf.data$Zipf_rank, xlab="Zipf Scale")
title(main="Number of Word Types by Zipf Value")
plot(Zipf.data$frequency)
sm.density.compare(Zipf.data$frequency, Zipf.data$Zipf_rank, xlab="Zipf Scale")
density(Zipf.data$frequency)
plot(density(Zipf.data$frequency))
sm.density.compare(Zipf.data$frequency, Zipf.data$Zipf_rank, xlab="Zipf Scale")
hist(Zipf.data$frequency)
hist(Zipf.data$Zipf_rank, Zipf.data$frequency)
plot(Zipf.data$Zipf_rank, Zipf.data$frequency)
hist(Zipf.data)
hist(Zipf.data$frequency)
counts <- table(Zipf.data$Zipf_rank)
counts
counts <- table(mtcars$gear)
counts
?barplot
barplot(Zipf.data, main="Number of Word Types by Zipf Value",#
        xlab="Zipf Scale")
Zipf.data
a <- factor(c('1'*25326,'2'*31063,'3'*13426,'4'*3698,'5'*637,'6'*123,'7'*13))
attach(Zipf.data)#
g <- ggplot(frequency, aes(Zipf_rank))
library(ggplot2)
attach(Zipf.data)#
g <- ggplot(frequency, aes(Zipf_rank))
frequency
Zipf_rank
g + geom_bar()
ggplot(mpg, aes(class))
ggplot(mpg, aes(class)) + geom_bar()
ggplot(Zipf.data, aes(Zipf_rank))
ggplot(Zipf.data, aes(Zipf_rank)) + geom_bar()
ggplot(Zipf.data, aes(Zipf_rank)) + geom_bar(aes(frequency))
ggplot(Zipf.data, aes(Zipf_rank, frequency))
ggplot(Zipf.data, aes(Zipf_rank, frequency)) + geom_bar()
ggplot(Zipf.data, aes(Zipf_rank, frequency)) + geom_point()
ggplot(Zipf.data, aes(Zipf_rank, frequency)) + geom_bar()
ggplot(Zipf.data, aes(Zipf_rank, frequency)) + geom_point()
ggplot(Zipf.data, aes(Zipf_rank) + geom_bar(aes(weight = frequency))
)
ggplot(Zipf.data, aes(Zipf_rank, frequency)) + geom_point() + geom_line() + xlab("Zipf Scale") + ylab("Number of Word Types")
25326+31063+13426
3698+637+123+13
69815+4471
69815/74286
Zipf_rank <- c('1','2','3','4','5','6')#
loss <- c(25.5, 8.69, 3.09, .038, 0, 0)#
data.loss <- data.frame(Zipf_rank, loss)
Zipf.rank
data.loss
library(ggplot2)#
attach(data.loss)#
ggplot(data.loss, aes(Zipf_rank, loss)) + geom_point() + geom_line() + xlab("Zipf Scale") + ylab("% Data Loss")
ggplot(data.loss) + geom_point(aes(x=Zipf_rank, y=loss))
ggplot(data.loss) + geom_point(aes(x=Zipf_rank, y=loss)) + geom_line(aes(x=Zipf_rank, y=loss, color=cvr)) + xlab("Zipf Scale") + ylab("% Data Loss")
ggplot(data.loss) + geom_point(aes(x=Zipf_rank, y=loss)) + geom_line(aes(x=Zipf_rank, y=loss)) + xlab("Zipf Scale") + ylab("% Data Loss")
ggplot(data.loss) + geom_point(aes(x=Zipf_rank, y=loss)) + stat_smooth(aes(x=Zipf_rank, y=loss), method = lm, formula = y ~ poly(x, 10), se = FALSE)
ggplot(data.loss) + geom_point(aes(x=Zipf_rank, y=loss)) + xlab("Zipf Scale") + ylab("% Data Loss")
setwd('/Users/melodye/Desktop/Semantic_Files/Analyses/')
.Library
$which R
$ which R
which R
2*4
install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))
install.packages('rsconnect')
rsconnect::setAccountInfo(name='melodye',#
			  token='AACF467E734EBB8A2548BAC34085FDD4',#
			  secret='<SECRET>')
rsconnect::setAccountInfo(name='melodye', token='AACF467E734EBB8A2548BAC34085FDD4', secret='NAd459ynBtxbUbJ5QtimWLguNyhGfNiDxbFDGlTZ')
library(rsconnect)
install.packages(c('ggplot2', 'shiny'))
setwd("/Users/meldye/Documents/Insight/")#
#
bias <- read.csv(news-corpus-info.csv)
bias <- read.csv('news-corpus-info.csv')
setwd("/Users/meldye/Documents/Insight/news-lens/")#
#
bias <- read.csv('news-corpus-info.csv')
bias.head()
bias
source_bias <- read.csv('news-corpus-info.csv')#
#
# load package and data#
library(ggplot2)#
data(source_bias package="ggplot2")
data(source_bias, package="ggplot2")
source_bias <- read.csv('news-corpus-info.csv')
data(source_bias, package="ggplot2")
bias_select <- source_bias[source_bias$Bias %in% c("Left", "Lean Left", "Center", "Lean Right", "Right"), ]
theme_set(theme_bw())  # pre-set the bw theme.#
g <- ggplot(bias_select, aes(Article_Count, News_Source)) +#
  labs(subtitle="mpg: Displacement vs City Mileage",#
       title="Bubble chart")
g
theme_set(theme_bw())  # pre-set the bw theme.#
g <- ggplot(News_Source, aes(Bias, Article_Count)) +#
  labs(subtitle="mpg: Displacement vs City Mileage",#
       title="Bubble chart")
news_select <- source_bias[source_bias$News_Source, ]
# Scatterplot#
theme_set(theme_bw())  # pre-set the bw theme.#
g <- ggplot(news_select, aes(Bias, Article_Count)) +#
  labs(subtitle="mpg: Displacement vs City Mileage",#
       title="Bubble chart")
g
g + geom_jitter(aes(col=news_select, size=article_count))
g + geom_jitter(aes(col=news_select, size=Article_Count))
g
g + geom_jitter(aes(col=news_select,))
g
